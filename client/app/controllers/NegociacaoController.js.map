{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DataInvalidaException","DateConverter","getNegociacaoDao","Bind","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","dao","negociacoes","listaTodos","forEach","negociacao","adiciona","err","texto","message","event","preventDefault","_criaNegociacao","_limpaFormulario","value","focus","paraData","parseInt","parseFloat","importaNegociacoes","obtemNegociacoesDoPeriodo","console","log","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals","apaga","apagaTodos","esvazia"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao} from '../domain/index.js'; //'../domain/index.js';\r\nimport { NegociacoesView, MensagemView, Mensagem, DataInvalidaException, DateConverter } from '../ui/index.js';\r\nimport { getNegociacaoDao, Bind } from '../util/index.js';\r\n\r\nexport class NegociacaoController{\r\n\r\n  constructor() {\r\n    // a ideia é que $ seja o querySelector\r\n    // realizando o bind, $ mantém document como seu contexto this\r\n    const $ = document.querySelector.bind(document);  \r\n\r\n    // buscando elementos\r\n    this._inputData       = $('#data');\r\n    this._inputQuantidade = $('#quantidade');\r\n    this._inputValor      = $('#valor');\r\n\r\n    //criando o proxy com auxílio do Bind\r\n    this._negociacoes = new Bind(\r\n      new Negociacoes(),\r\n      new NegociacoesView('#negociacoes'),\r\n      'adiciona', 'esvazia'\r\n    );\r\n    \r\n    this._mensagem = new Bind(\r\n      new Mensagem(),\r\n      new MensagemView('#mensagemView'),\r\n      'texto'\r\n    );\r\n    \r\n    this._service = new NegociacaoService();\r\n    \r\n    this._init();\r\n    \r\n  }\r\n\r\n  async _init() {\r\n    try {\r\n      const dao = await getNegociacaoDao();\r\n      const negociacoes = await dao.listaTodos();\r\n      negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n    } catch(err) {\r\n      \r\n        this._mensagem.texto = err.message;\r\n    }\r\n  }\r\n\r\n  async adiciona(event) {\r\n\r\n    try {\r\n      // cancelando  a submissão do formulário\r\n      event.preventDefault();\r\n      const negociacao = this._criaNegociacao();\r\n    \r\n      const dao = await getNegociacaoDao();\r\n      await dao.adiciona(negociacao);\r\n      this._negociacoes.adiciona(negociacao);\r\n      this._mensagem.texto = 'Negociação adicionada com sucesso!';\r\n      this._limpaFormulario();\r\n    } catch(err) {\r\n      this._mensagem.texto = err.message;\r\n    }\r\n  }\r\n  \r\n  _limpaFormulario() {\r\n    this._inputData.value       = '';\r\n    this._inputQuantidade.value = 1;\r\n    this._inputValor.value      = 0.0\r\n    this._inputData.focus();\r\n  }\r\n\r\n  _criaNegociacao() {\r\n    //retorna uma instancia de nogociação\r\n    return new Negociacao(\r\n      DateConverter.paraData(this._inputData.value)  ,\r\n      parseInt(this._inputQuantidade.value),\r\n      parseFloat(this._inputValor.value)\r\n    );\r\n  }\r\n  \r\n  async importaNegociacoes() {\r\n\r\n    try {\r\n      const negociacoes = await this._service.obtemNegociacoesDoPeriodo();\r\n      console.log(negociacoes);\r\n      negociacoes.filter(novaNegociacao =>\r\n        !this._negociacoes.paraArray().some(negociacaoExistente =>\r\n          novaNegociacao.equals(negociacaoExistente)))\r\n      .forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n      this._mensagem.texto = 'Negociações do período importadas com sucesso!';\r\n    } catch(err) {\r\n        this._mensagem.texto = err.message;\r\n    }\r\n  }\r\n\r\n  async apaga() {\r\n    try {\r\n      const dao = await getNegociacaoDao();\r\n      await dao.apagaTodos();\r\n      this._negociacoes.esvazia();\r\n      this._mensagem.texto = 'Negociações apagadas com sucesso';\r\n    } catch(err) {\r\n        this._mensagem.texto = err.message;\r\n    }\r\n  }\r\n}"]}