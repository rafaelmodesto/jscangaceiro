{"version":3,"sources":["../../app-src/util/HttpService.js"],"names":["HttpService","get","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","console","log","send"],"mappings":";;;;;;UAAaA,W,GAAN,MAAMA,WAAN,CAAkB;;AAEvBC,YAAIC,GAAJ,EAAS;AACP,iBAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,kBAAMC,MAAM,IAAIC,cAAJ,EAAZ;;AAEAD,gBAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;;AAEAI,gBAAIG,kBAAJ,GAAyB,MAAM;AAC7B,kBAAGH,IAAII,UAAJ,IAAkB,CAArB,EAAwB;AACtB,oBAAGJ,IAAIK,MAAJ,IAAc,GAAjB,EAAsB;AACpBP,0BAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACD,iBAFD,MAEO;AACLC,0BAAQC,GAAR,CAAYV,IAAIQ,YAAhB;;AAEAT,yBAAOC,IAAIQ,YAAX;AACD;AACF;AACF,aAVD;AAWAR,gBAAIW,IAAJ;AACD,WAjBM,CAAP;AAkBD;AArBsB,O","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n\r\n  get(url) {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      \r\n      xhr.open('GET', url);\r\n\r\n      xhr.onreadystatechange = () => {\r\n        if(xhr.readyState == 4) {\r\n          if(xhr.status == 200) {\r\n            resolve(JSON.parse(xhr.responseText));\r\n          } else {\r\n            console.log(xhr.responseText);\r\n\r\n            reject(xhr.responseText);\r\n          }\r\n        }\r\n      };\r\n      xhr.send();\r\n    });\r\n  }\r\n}"]}