{"version":3,"sources":["../../app-src/util/Debounce.js"],"names":["debounce","fn","milissegundos","timer","clearTimeout","setTimeout"],"mappings":";;;AAAA;;;;;;;;AAQO,WAASA,QAAT,CAAkBC,EAAlB,EAAsBC,aAAtB,EAAqC;;AAE1C,QAAIC,QAAQ,CAAZ;;AAEA,WAAO,MAAM;;AAEX;AACAC,mBAAaD,KAAb;;AAEA;AACA;AACAE,iBAAW,MAAMJ,IAAjB,EAAuBC,aAAvB;AACD,KARD;AASD;;sBAbeF,Q","file":"Debounce.js","sourcesContent":["/*\r\n  Debounce Pattern\r\n    É um padrão de projeto utilizado quando existe a chance de\r\n  ser enviado várias vezes a mesma requisição, caso a mesma ação\r\n  seja executada dentro de um período de tempo apenas a última\r\n  será executada.\r\n*/\r\n\r\nexport function debounce(fn, milissegundos) {\r\n\r\n  let timer = 0;\r\n\r\n  return () => {\r\n\r\n    // para o último timer definido\r\n    clearTimeout(timer);\r\n\r\n    //usa um temporizador para chamar fn()\r\n    //depois de tantos milissegundos\r\n    setTimeout(() => fn(), milissegundos);\r\n  }\r\n}"]}